---
- name: Set known network names
  ansible.builtin.set_fact:
    known_network_names: "{{ libvirt_networks | map(attribute='name') | list }}"

- name: Set known pool names
  ansible.builtin.set_fact:
    known_pool_names: "{{ libvirt_pools | map(attribute='name') | list }}"

- name: Verify that required networks are defined
  ansible.builtin.assert:
    that: "{{ item in known_network_names }}"
    fail_msg: "{{ item }} needs to be set as a network"
    success_msg: "Required variable {{ item }} is defined as a network"
  changed_when: false
  loop: "{{ virtual_machine.networks }}"

- name: Verify that required pools are defined
  ansible.builtin.assert:
    that: "{{ virtual_machine.pool in known_pool_names }}"
    fail_msg: "{{ virtual_machine.pool }} needs to be set as a pool"
    success_msg: "Required variable {{ virtual_machine.pool }} is defined as a pool"
  changed_when: false
  diff: false

- name: Verify that required cloud_init attributes are defined, when it is enabled
  ansible.builtin.assert:
    that:
      - "{{ item }} is defined"
      - "{{ item }} | length > 0"
      - "{{ item }} != None"
    fail_msg: "{{ item }} needs to be set for the role to work"
    success_msg: "Required variable {{ item }} is defined"
  changed_when: false
  diff: false
  loop:
    - virtual_machine.cloud_init_userdata
    - virtual_machine.cloud_init_networkdata
  when: libvirt_cloud_init_custom is sameas true

- name: Verify that required ansible_pull attributes are defined, when it is enabled
  ansible.builtin.assert:
    that:
      - "{{ item }} is defined"
      - "{{ item }} | length > 0"
      - "{{ item }} != None"
    fail_msg: "{{ item }} needs to be set for the role to work"
    success_msg: "Required variable {{ item }} is defined"
  changed_when: false
  diff: false
  loop:
    - virtual_machine.ansible_pull.ansible_user_passwd_hash
    - virtual_machine.ansible_pull.repo_owner
    - virtual_machine.ansible_pull.repo_name
    - virtual_machine.ansible_pull.playbook_name
    - virtual_machine.ansible_pull.deploy_key_name
  when: virtual_machine.ansible_pull.enabled is sameas true

- name: Verify that required ssh_ca attributes are defined, when it is enabled
  ansible.builtin.assert:
    that:
      - "{{ item }} is defined"
      - "{{ item }} | length > 0"
      - "{{ item }} != None"
    fail_msg: "{{ item }} needs to be set for the role to work"
    success_msg: "Required variable {{ item }} is defined"
  changed_when: false
  diff: false
  loop:
    - virtual_machine.ssh_ca.host_ca_privatekey
    - virtual_machine.ssh_ca.host_ca_privatekey_pass
    - virtual_machine.ssh_ca.host_ca_publickey
    - virtual_machine.ssh_ca.user_ca_publickeys
  when: virtual_machine.ssh_ca.enabled is sameas true
